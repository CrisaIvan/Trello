{
	"info": {
		"_postman_id": "c0975692-c837-4b40-afa0-836a003994d2",
		"name": "TRELLO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30261120"
	},
	"item": [
		{
			"name": "Get all boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"console.log(pm.response.json().length)\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.collectionVariables.set('boardID', response[0].id);\r",
							"const existingBoardIDs = response.map(board => board.id);\r",
							"pm.collectionVariables.set('existingBoardIDs', existingBoardIDs);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/members/me/boards?key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test('Board-ul este creat', () => {\r",
							"    pm.expect(response.name).to.eql('New Name ' + pm.collectionVariables.get('boardNumber'));\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test('Board-ul este privat', () => {\r",
							"    pm.expect(response.prefs.permissionLevel).to.eql('private');\r",
							"});\r",
							"\r",
							"pm.test('Calendarul este dezactivat', () => {\r",
							"    const calendarView = response.prefs.switcherViews.find(view => view.viewType === 'Calendar');\r",
							"    pm.expect(calendarView).to.be.an('object');\r",
							"    pm.expect(calendarView.enabled).to.be.false;\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('boardID', response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let boardNumber = pm.collectionVariables.get('boardNumber');\r",
							"if (isNaN(boardNumber)) {\r",
							"    boardNumber = 0;\r",
							"}\r",
							"\r",
							"boardNumber++;\r",
							"pm.collectionVariables.set('boardNumber', boardNumber);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/?key={{trellokey}}&token={{trellotoken}}&name=New Name {{boardNumber}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "name",
							"value": "New Name {{boardNumber}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TO DO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							" const response = pm.response.json();\r",
							"\r",
							"pm.test('Lista TO DO este creata', () => {\r",
							"    pm.expect(response.name).to.eql('TO DO List');\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"    pm.expect(response.idBoard).to.eql(pm.collectionVariables.get('boardID'))\r",
							"});\r",
							"\r",
							"console.log (response.id);\r",
							"pm.collectionVariables.set('todoListID', response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/lists/?name=TO DO List&idBoard={{boardID}}&key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "TO DO List"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test('Lista DONE este creata', () => {\r",
							"    const response = pm.response.json()\r",
							"\r",
							"    pm.expect(response.name).to.eql('DONE list');\r",
							"    pm.expect(response.closed).to.be.false;\r",
							"    pm.expect(response.idBoard).to.eql(pm.collectionVariables.get('boardID'));\r",
							"\r",
							"    pm.collectionVariables.set('doneListID', response.id);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/lists/?name=DONE list&idBoard={{boardID}}&key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "DONE list"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new CARD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Card-ul este creat', () => {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    pm.expect(response.name).to.eql('Sign-up for Trello');\r",
							"    pm.expect(response.idList).to.eql(pm.collectionVariables.get('todoListID'));\r",
							"    pm.expect(response.idBoard).to.eql(pm.collectionVariables.get('boardID'));\r",
							"    console.log(response.badges.attachmentsByType.trello.card);\r",
							"    pm.expect(response.badges.attachmentsByType.trello.card).to.eql(1);\r",
							"\r",
							"    pm.collectionVariables.set('cardID', response.id);\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards?name=Sign-up for Trello&idList={{todoListID}}&key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "name",
							"value": "Sign-up for Trello"
						},
						{
							"key": "idList",
							"value": "{{todoListID}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Card-ul este mutat', () => {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    pm.expect(response.name).to.eql('Sign-up for Trello');\r",
							"    pm.expect(response.idList).to.eql(pm.collectionVariables.get('doneListID'));\r",
							"    pm.collectionVariables.set('cardID', response.id);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Timpul de raspuns este mai mic de 400ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/cards/:id?key={{trellokey}}&token={{trellotoken}}&idList={{doneListID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "idList",
							"value": "{{doneListID}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const existingBoardIDs = pm.collectionVariables.get('existingBoardIDs');\r",
							"console.log(existingBoardIDs);\r",
							"const boardID = existingBoardIDs.pop();\r",
							"pm.collectionVariables.set('boardID', boardID);\r",
							"pm.collectionVariables.set('existingBoardIDs', existingBoardIDs);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/boards/:id?key={{trellokey}}&token={{trellotoken}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "trellokey",
			"value": "402d69e9f7008661979b824c4c909c8c"
		},
		{
			"key": "trellotoken",
			"value": "ATTA399c9c5cc0f34a0a7c5d72f4ff35840d70bbcb37764d83e29c15eb92bf51b93d461A10B5"
		},
		{
			"key": "baseURL",
			"value": "https://api.trello.com"
		},
		{
			"key": "boardID",
			"value": ""
		},
		{
			"key": "todoListID",
			"value": ""
		},
		{
			"key": "doneListID",
			"value": ""
		},
		{
			"key": "cardID",
			"value": ""
		},
		{
			"key": "existingBoardIDs",
			"value": ""
		},
		{
			"key": "boardNumber",
			"value": ""
		}
	]
}